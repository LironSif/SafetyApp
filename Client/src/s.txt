ok so i would like to share with you my app code
i want to create login and sign in pages
sign have 
Sign up
Name

Email

Password



I accept the terms of service and privacy policy
Sign up
or
Sign up with GitHub
GoogleSign up with Google
Already have an account?

Log in here!

login haveLog in
Email

hello@example.com
Password


Log in
I forgot my password
or
Log in with GitHub
GoogleLog in with Google
Log in with SSO
Don't have an account?

Sign up for free!

i want to verfy that if a user visit for the first time in the login or sign up page
a modal (which i describe later)  will pop and update the state useing redux or rtk 
we will need to create public route
page /privacy-preferences  (which i also describe later)
that will have the same setting as the modal
this will have link in the login page footer "Privacy Preferences"

the modal description:
The modal window in the image provided appears to be centrally placed on the screen over a blurred background, which is a common design to draw user attention to the content of the modal. The modal's height is less than half of the visible browser window's height, while the width of the modal is about half of the browser's viewport width.

These proportions help ensure that the modal stands out and is easily readable without taking up the entire screen, which might overwhelm the user. It looks designed to provide a focused interaction area for privacy settings.

The choices 'Reject All', 'Accept All', and 'Save choices' are prominently displayed, with switches to toggle individual privacy settings such as 'Analytics' and 'Behavioral Advertising', indicating that the user can customize their preferences. The use of contrast (dark text on a light background) within the modal ensures readability.

the Privacy Preferences description:


The screenshot depicts a web page that is dedicated to privacy settings, which spans the entire viewport of the browser. The design is clean, with a large blue header at the top that says "Your Privacy," with tabs for "Overview" and "Preferences." The main content area is white, with a section titled "Choose how we use your data."

This privacy settings interface includes several sections like "Analytics," "Behavioral Advertising," "Essential Services," and "Functional," each with a toggle switch for opting in or out. There are also two prominent buttons, "Reject All" and "Accept All," at the top right of the purposes list, which suggest quick actions for the user.

The font size is readable and comfortably large, and the layout is such that it fills the screen without being overcrowded. This suggests that the privacy settings page is designed to be user-friendly, allowing individuals to easily understand and control their data preferences. The bottom of the page has "Submit" and "Exit" buttons, indicating the actions users can take after making their choices.

In terms of feature size relative to the viewport, the toggle switches are moderately sized for easy interaction, and the text is large enough to be read without zooming in. The overall design appears responsive, likely adjusting to fit the width of the browser window while maintaining a clear, user-focused layout.

login description :
displays a login interface for 'Saftey' with a clean and minimalist design. The primary color theme is a palette of whites and shades of blue. The login form is centralized on the page, with generous spacing around it that creates a focused and user-friendly experience.

The login module has a rounded corner design, which softens the overall look and is a common trend in modern user interfaces. It has a narrow border with what appears to be a light grey color that subtly distinguishes the form from the white background of the web page. The form's inputs and buttons are aligned in a column, making for a straightforward, linear user flow.

Here are the details regarding the styling and elements:

Title: The "Log in" title at the top of the form uses a bold, sans-serif typeface, likely to draw attention.

Input Fields: There are two input fields for "Email" and "Password". The "Email" field is populated with placeholder text "hello@example.com", which is standard practice for indicating the expected input format. Both fields have a flat design with no visible borders until clicked on, which is indicative of a clean, modern aesthetic. When active, they may exhibit a change in border color to indicate focus.

Primary Button: The "Log in" button is styled with a solid fill of Saftey's brand blue color, which makes it stand out as the primary call to action. The button has rounded corners, consistent with the form's style.

Secondary Text: The "I forgot my password" text is smaller in size, likely with a weight that is lighter than the form's title, providing a secondary option without competing for attention.

Dividing Line: Below the primary login options, there is a line with the word "or," which acts as a visual separator between the email/password login and social logins.

Social Login Buttons: There are options to "Log in with GitHub" and "Log in with Google," each button featuring the respective company's logo. These logos likely use the official colors of GitHub (black) and Google (blue, red, yellow, green). There is also a less emphasized "Log in with SSO" option.

Signup Link: At the bottom, there is an invitation to "Sign up for free!" The text is probably a hyperlink, styled differently from regular text to indicate that it's clickable, typically by color and possibly underlined.

Footer: At the very bottom, there is a footer that reads "Made with â™¥ by Saftey," showing the company's branding and presumably its culture.

The overall layout, spacing, and alignment are crafted to lead the eye naturally from top to bottom, guiding the user through the login process with clear visual hierarchy and a restrained use of color to indicate interactive elements. The generou


s margin around the login form sets it apart from the rest of the page, ensuring focus and minimizing distractions.

first both sign in and login are like a continent and the header is in side i will give you some more details on the contaner
second i don't want to use the SSO button so remove it
for login and signin 
the page bg color is 
F9FAFB
the form bg colr is
FFFFFF
theneed to recreate this login page in HTML and CSS:

HTML Structure:

Main Container (<div>)

This is the central div that wraps all content. It probably has a set maximum width and is centered on the page with margin auto on left and right.
Header (<header> or <div>)

Inside, there's a logo or image (<img>) representing the brand.
Login Box (<div>)

A div that contains all the login fields and buttons.
Form Section (<form>)

Email Input: An input field (<input type="email">) for the email address.
Password Input: A password field (<input type="password">) for the password.
Login Button: A button (<button> or <input type="submit">) to submit the form.
Auxiliary Options (<div> or <p>)

Forgot Password Link: A text link (<a href="#">) for password recovery.
Separator: A line or styled <hr> to separate login methods.
Alternate Login Options: Buttons or links for logging in with GitHub, Google, or SSO.
Signup Link (<div> or <p>)

A text link (<a href="#">) inviting to sign up if the user doesn't have an account.
Footer (<footer> or <div>)

A small text or link indicating the tool was made with love by Ngrok.
CSS Styling:

Main Container:

Max-width (to control the width of the container)
Margin: auto (to center the container)
Padding: to add space inside the container
Border: for styling
Box-shadow: to create depth (optional)
Login Box:

Background-color: to set the box color
Padding: to add space inside the box
Border-radius: to round the corners
Box-shadow: to create depth (optional)
Input Fields:

Border: to define the style of the border
Padding: to add space inside the input fields
Margin-bottom: to add space between the inputs
Buttons:

Background-color: to set the button color
Color: to set the text color
Border: none or styled to match the design
Padding: to increase clickable area
Border-radius: to create rounded corners
Links and Alternate Options:

Display: block or inline-block
Text-decoration: none (to remove underlines)
Color: to set the text color
Margin: to add space around elements
Padding: to add space inside elements
Footer:

Font-size: to control the size of the text
Color: to set the text color
Text-align: center (if it's centered)
Margin Notes:

There seem to be equal margins on the left and right of the main container to keep it centered.
Elements inside the login box likely have consistent margins to separate them visually.
To ensure responsiveness and make the design look good on different screen sizes, media queries would be used to adjust margins, padding, and element sizes.

If you're starting from scratch, you would need to use the above structure and style it using CSS to match the design in the image. Additionally, ensure that your form elements have the appropriate name attributes so that they can send data correctly when submitted.